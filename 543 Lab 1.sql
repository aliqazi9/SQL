{
    "metadata": {
        "kernelspec": {
            "name": "SQL",
            "display_name": "SQL",
            "language": "sql"
        },
        "language_info": {
            "name": "sql",
            "version": ""
        }
    },
    "nbformat_minor": 2,
    "nbformat": 4,
    "cells": [
        {
            "cell_type": "markdown",
            "source": [
                "1) Write the SQL code to determine who the oldest student from California, Texas, or Washington who has a LastName beginning with the letter �M�"
            ],
            "metadata": {
                "azdata_cell_guid": "dc29fa36-2dff-4f68-a070-2c7997b50dbe"
            }
        },
        {
            "cell_type": "code",
            "source": [
                "SELECT StudentLname, StudentFname, StudentPermState\n",
                "FROM tblSTUDENT\n",
                "WHERE StudentPermState\n",
                "in ('California, CA', 'Texas, TX,', 'Washington, WA')\n",
                "and StudentLname like 'm%%%' and DateOfDeath > '2022-04-02'and StudentBirth < '1933'\n",
                "\n",
                "\n",
                "/*\n",
                "2) Write the SQL to determine which states have at least 6,500 students born before 1956\n",
                "*/\n",
                "\n",
                "SELECT StudentPermState, count(StudentPermState) as 'students'\n",
                "FROM tblSTUDENT\n",
                "WHERE StudentBirth < '1956'\n",
                "Group by StudentPermState\n",
                "having count(StudentPermState) >= '6500'\n",
                "\n",
                "/*\n",
                "3) Write SQL query to determine the number of students who have received a grade of exactly 3.7 for any class from the Department of Anthropology since 1963. \n",
                "\n",
                "DISTINCT keyword will change results by eliminating duplicate rows!\n",
                "*/\n",
                "\n",
                "Select count(*) as '3.7 students'\n",
                "From tblCOURSE\n",
                "join tblCLASS on tblcourse.CourseID = tblCLASS.CourseID\n",
                "join tblCLASS_LIST on tblClass.ClassID = tblCLASS_LIST.ClassID\n",
                "Where tblCOURSE.CourseName\n",
                "like 'ANT%%'\n",
                "and tblCLASS_LIST.Grade = '3.7'\n",
                "and RegistrationDate >= '1963'\n",
                "\n",
                "/*\n",
                "4) Write the SQL code to determine the 12 most popular courses in the College of Engineering by number of registrations between 1998 and 2015.\n",
                "*/\n",
                "\n",
                "SELECT count(RegistrationDate), CourseName\n",
                "From tblCOURSE\n",
                "join tblCLASS on tblCOURSE.CourseID = tblclass.CourseID\n",
                "join tblCLASS_LIST on tblCLASS.ClassID = tblCLASS_LIST.ClassID\n",
                "Where CourseName\n",
                "like 'ENGR%%'\n",
                "and RegistrationDate\n",
                "between '1998'\n",
                "and '2015'\n",
                "Group by CourseName\n",
                "having count (RegistrationDate) > '624'\n",
                "order by count(RegistrationDate) DESC\n",
                "\n",
                "\n",
                "/*\n",
                "5) Write the SQL to determine which courses generated more than XXX in total registration fees for classes held in \n",
                "either Johnson Hall or Mary Gates Hall before June 3, 2013.\n",
                "*/\n",
                "\n",
                "SELECT CourseID, BuildingName, sum(RegistrationFee)\n",
                "FROM tblCLASS_LIST\n",
                "join tblclass\n",
                "on tblCLASS_LIST.ClassID = tblCLASS.ClassID\n",
                "join tblCLASSROOM\n",
                "on tblclass.ClassroomID = tblCLASSROOM.ClassroomID\n",
                "join tblBUILDING\n",
                "on tblclassroom.BuildingID = tblBUILDING.BuildingID\n",
                "Where BuildingName\n",
                "in ('Johnson hall', 'MAry Gates Hall')\n",
                "and RegistrationDate < '06/03/13'\n",
                "group by CourseID, BuildingName, RegistrationFee\n",
                "\n",
                "\n",
                "\n",
                "/*\n",
                "6) Write the SQL to determine average registration fee for a 4 credit course held on Stevens Way in the 1980's\n",
                "*/\n",
                "\n",
                "SELECT avg(RegistrationFee)\n",
                "as 'Avg Fee'\n",
                "From tblCOURSE\n",
                "join tblCLASS\n",
                "on tblCOURSE.CourseID = tblClass.CourseID\n",
                "join tblCLASS_LIST\n",
                "on tblclass.ClassID = tblCLASS_LIST.ClassID\n",
                "join tblCLASSROOM\n",
                "on tblCLASS.ClassroomID = tblCLASSROOM.ClassroomID\n",
                "join tblBUILDING\n",
                "on tblCLASSROOM.BuildingID = tblBUILDING.BuildingID\n",
                "join tblLOCATION\n",
                "on tblBUILDING.LocationID = tblLOCATION.LocationID\n",
                "where credits = '4.0'\n",
                "and LocationName = 'Stevens Way'\n",
                "and RegistrationDate = '1980'\n",
                "\n",
                "\n",
                "/*\n",
                "7) Write the SQL to determine how many students born between November 15, 1986 and July 2, 1991 finished a class from College of Medicine with at least a 3.8 grade in any Spring quarter after 2011?\n",
                "*/\n",
                "\n",
                "Select count(*)\n",
                "From tblCOLLEGE\n",
                "join tblDEPARTMENT\n",
                "on tblCOLLEGE.CollegeID = tblDEPARTMENT.CollegeID\n",
                "join tblCOURSE\n",
                "on tblCOURSE.DeptID = tblDEPARTMENT.DeptID\n",
                "join tblCLASS\n",
                "on tblCOURSE.CourseID = tblCLASS.CourseID\n",
                "join tblCLASS_LIST\n",
                "on tblCLASS_LIST.ClassID = tblCLASS.ClassID\n",
                "join tblCLASSROOM\n",
                "on tblclassroom.ClassroomID = tblCLASS.ClassroomID\n",
                "join tblQUARTER\n",
                "on tblQUARTER.QuarterID = tblCLASS.QuarterID\n",
                "join tblSTUDENT\n",
                "on tblCLASS_LIST.StudentID = tblSTUDENT.StudentID\n",
                "Where tblCOLLEGE.CollegeName\n",
                "like 'Medicine'\n",
                "and tblQUARTER.QuarterName\n",
                "like 'Spring'\n",
                "and tblCLASS_LIST.Grade > = '3.8'\n",
                "and tblSTUDENT.StudentBirth\n",
                "between '11/15/86'\n",
                "and '7/2/91'\n",
                "and tblCLASS.[YEAR] > '2011'\n",
                "\n",
                "\n",
                "/*\n",
                "8) Write the SQL to determine which colleges had at least 300 classes offered Autumn quarter 2016?\n",
                "*/\n",
                "\n",
                "SELECT count (Distinct(tblcourse.CourseID)), tblCOLLEGE.CollegeName\n",
                "From tblCOLLEGE\n",
                "join tblDEPARTMENT\n",
                "on tblDEPARTMENT.CollegeID = tblCOLLEGE.CollegeID\n",
                "join tblCOURSE\n",
                "on tblDEPARTMENT.DeptID = tblCOURSE.DeptID\n",
                "join tblCLASS\n",
                "on tblCOURSE.CourseID = tblCLASS.CourseID\n",
                "join tblCLASS_LIST\n",
                "on tblCLASS.ClassID = tblCLASS_LIST.ClassID\n",
                "join tblCLASSROOM\n",
                "on tblCLASS.ClassroomID =tblCLASSROOM.ClassroomID\n",
                "join tblQUARTER\n",
                "on tblCLASS.QuarterID =tblQUARTER.QuarterID\n",
                "where QuarterName = 'Autumn'\n",
                "and tblCLASS.[YEAR] = '2016'\n",
                "group by tblCOLLEGE.CollegeName\n",
                "having count (Distinct(tblcourse.CourseID)) >= '300'"
            ],
            "metadata": {
                "azdata_cell_guid": "1db33390-e2f5-41fb-88ce-9db3573402a3",
                "language": "sql"
            },
            "outputs": [],
            "execution_count": null
        }
    ]
}